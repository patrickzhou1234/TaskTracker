{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwong\\\\Documents\\\\reactappskyros\\\\TaskTracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksfromserver = await fetchTasks();\n      setTasks(tasksfromserver);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = async id => {\n    await fetch('http://localhost/tasks/${id}', {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = function (id) {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask,\n      title: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 30\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RGFqjgk+Z94XphEm7+2o9EgoW0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Tasks","AddTask","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksfromserver","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","deleteTask","method","filter","toggleReminder","map","reminder","length"],"sources":["C:/Users/mwong/Documents/reactappskyros/TaskTracker/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(true);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksfromserver = await fetchTasks();\n      setTasks(tasksfromserver);\n    }\n    getTasks();\n  }, []);\n  \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost/tasks');\n    const data = await res.json();\n\n    return data;\n  }\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000)+1;\n    const newTask = {id, ...task};\n    setTasks([...tasks, newTask]);\n  }\n\n  const deleteTask = async (id) => {\n    await fetch('http://localhost/tasks/${id}', {\n      method: 'DELETE',\n    });\n\n    setTasks(tasks.filter((task) => task.id!== id));\n  }\n\n  const toggleReminder = function(id) {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task));\n  }\n\n  return (\n    <div className='container'>\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} title=\"Task Tracker\" />\n        {showAddTask && <AddTask onAdd={addTask}></AddTask>}\n        {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}></Tasks>) : ('No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;EAEA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAG,YAAY;MAC3B,MAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;MACAH,QAAQ,CAACE,eAAD,CAAR;IACD,CAHD;;IAIAD,QAAQ;EACT,CANQ,EAMN,EANM,CAAT;;EAQA,MAAME,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEA,OAAOD,IAAP;EACD,CALD;;EAOA,MAAME,OAAO,GAAIC,IAAD,IAAU;IACxB,MAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAkC,CAA7C;IACA,MAAMC,OAAO,GAAG;MAACJ,EAAD;MAAK,GAAGD;IAAR,CAAhB;IACAT,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMC,UAAU,GAAG,MAAOL,EAAP,IAAc;IAC/B,MAAML,KAAK,CAAC,8BAAD,EAAiC;MAC1CW,MAAM,EAAE;IADkC,CAAjC,CAAX;IAIAhB,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAWA,EAAlC,CAAD,CAAR;EACD,CAND;;EAQA,MAAMQ,cAAc,GAAG,UAASR,EAAT,EAAa;IAClCV,QAAQ,CAACD,KAAK,CAACoB,GAAN,CAAWV,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGD,IAAJ;MAAUW,QAAQ,EAAE,CAACX,IAAI,CAACW;IAA1B,CAAjB,GAAuDX,IAA3E,CAAD,CAAR;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI,QAAC,MAAD;MAAQ,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAAnC;MAAmD,OAAO,EAAEA,WAA5D;MAAyE,KAAK,EAAC;IAA/E;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKA,WAAW,iBAAI,QAAC,OAAD;MAAS,KAAK,EAAEW;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFpB,EAGKT,KAAK,CAACsB,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;MAAO,KAAK,EAAEtB,KAAd;MAAqB,QAAQ,EAAEgB,UAA/B;MAA2C,QAAQ,EAAEG;IAArD;MAAA;MAAA;MAAA;IAAA,QAApB,GAAsG,kBAH3G;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA7CQtB,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}